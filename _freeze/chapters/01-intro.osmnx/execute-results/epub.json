{
  "hash": "4b4423fa00f8adf56a7eeff9d76f3baf",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Capa Recurrente LSTM\nlang: es\nformat:\n  html: default\n  pdf: default  \nexecute: \n  freeze: auto \njupyter: python3\n---\n\nğŸ”¹ 2. Â¿QuÃ© es una capa LSTM en el contexto de inundaciones?\nEs una capa de red neuronal recurrente especializada en procesar datos secuenciales temporales (como series de tiempo de niveles de rÃ­os, precipitaciÃ³n, humedad del suelo, etc.). Su diseÃ±o con \"puertas\" le permite recordar patrones importantes a lo largo del tiempo (ej.: picos de lluvia que anteceden a una inundaciÃ³n), olvidando informaciÃ³n irrelevante (ej.: dÃ­as sin lluvia). Esto es crucial para predecir eventos extremos con horas o dÃ­as de anticipaciÃ³n.\n\nğŸ”¹ 2.2. ParÃ¡metros principales (en contexto de inundaciones)\n\nunits â†’ NÃºmero de celdas LSTM. MÃ¡s unidades capturan patrones complejos (ej.: 50 unidades para predecir crecidas en una cuenca grande).\n\nreturn_sequences â†’ Si es True, devuelve salidas en cada paso temporal (Ãºtil para conectar otra LSTM despuÃ©s).\n\nreturn_state â†’ Devuelve estados internos (para modelos avanzados de atenciÃ³n o inicializaciÃ³n).\n\nactivation â†’ FunciÃ³n de activaciÃ³n (por defecto tanh para estabilidad).\n\ninput_shape â†’ Forma de la entrada: (pasos_temporales, caracterÃ­sticas) (ej.: (30, 5) para 30 dÃ­as con 5 variables meteorolÃ³gicas).\n\nğŸ”¹ 2.3. Ejemplo conceptual con datos reales\nImagina una secuencia de 7 dÃ­as de datos hidrolÃ³gicos para predecir inundaciones:\n\nEntrada (7 dÃ­as Ã— 4 caracterÃ­sticas):\n\nDÃ­a 1: [PrecipitaciÃ³n=5mm, Nivel_rÃ­o=2m, Humedad_suelo=60%, Temperatura=20Â°C]\n\nDÃ­a 2: [10mm, 2.2m, 70%, 18Â°C]\n\n...\n\nDÃ­a 7: [50mm, 3.5m, 95%, 15Â°C]\n\nUna LSTM con units=3 procesarÃ¡ esta secuencia dÃ­a a dÃ­a, actualizando su \"memoria\" con la evoluciÃ³n de las variables.\n\nğŸ”¹ 2.4. Ejemplo interpretativo para predicciÃ³n de inundaciones\nSupÃ³n que usamos:\n\npython\nLSTM(units=10, return_sequences=False, input_shape=(30, 6))\na) Entrada\n30 dÃ­as histÃ³ricos con 6 variables: precipitaciÃ³n, nivel del rÃ­o, humedad del suelo, temperatura, velocidad del viento, presiÃ³n atmosfÃ©rica.\n\nb) Proceso\n\nunits=10 â†’ La capa tiene 10 celdas LSTM para capturar patrones complejos (ej.: correlaciones entre lluvia acumulada y subida del rÃ­o).\n\nreturn_sequences=False â†’ Solo devuelve la salida del Ãºltimo dÃ­a (para predecir inundaciÃ³n al dÃ­a siguiente).\n\nLas puertas de olvido descartan datos no relevantes (ej.: dÃ­as secos antiguos).\n\nLas puertas de entrada guardan informaciÃ³n crÃ­tica (ej.: lluvia intensa reciente).\n\nLa salida genera un vector de 10 valores que resume el riesgo.\n\nc) Salida\n\nForma: (batch_size, 10)\n\nInterpretaciÃ³n: Cada valor del vector representa un patrÃ³n aprendido (ej.: el valor 1 podrÃ­a correlacionarse con \"alta humedad acumulada\", el valor 2 con \"tendencia de subida rÃ¡pida del rÃ­o\", etc.). Este vector se alimenta a una capa densa para predecir probabilidad de inundaciÃ³n.\n\nğŸ”¹ 2.5. AnalogÃ­a intuitiva\nPiensa en la LSTM como un experto en hidrologÃ­a que analiza un informe diario:\n\nForget gate: Como cuando decide que una lluvia leve de hace 20 dÃ­as ya no es relevante para el riesgo actual.\n\nInput gate: Cuando subraya datos importantes: \"Â¡Lluvia de 100mm en 3 dÃ­as!\".\n\nOutput gate: Cuando emite un alerta gradual: \"RÃ­o subiendo 0.5m/dÃ­a â†’ riesgo en 48h\".\nCuantas mÃ¡s capas LSTM, mÃ¡s sofisticado es el anÃ¡lisis (de variables individuales a interacciones complejas como \"suelo saturado + lluvia intensa = inundaciÃ³n repentina\").\n\nğŸ”¹ Mini-ejemplo numÃ©rico simplificado\nEntrada de 3 dÃ­as para predecir crecida:\n\nDÃ­a 1: [Precip=10mm, Nivel_rÃ­o=1.5m] â†’ x1 = [0.1, 0.15] (valores normalizados)\n\nDÃ­a 2: [Precip=30mm, Nivel_rÃ­o=1.7m] â†’ x2 = [0.3, 0.17]\n\nDÃ­a 3: [Precip=60mm, Nivel_rÃ­o=2.0m] â†’ x3 = [0.6, 0.2]\n\nEstado inicial: h0 = [0, 0], c0 = [0, 0]\n\nPaso 1 (DÃ­a 1):\n\nLa LSTM detecta lluvia moderada â†’ actualiza ligeramente su estado.\n\nh1 = [0.02, 0.01], c1 = [0.03, 0.02]\n\nPaso 2 (DÃ­a 2):\n\nLluvia alta â†’ puerta de entrada guarda esta informaciÃ³n.\n\nh2 = [0.15, 0.1], c2 = [0.2, 0.12]\n\nPaso 3 (DÃ­a 3):\n\nLluvia extrema + nivel subiendo â†’ puerta de olvido mantiene todo el historial reciente.\n\nSalida: h3 = [0.8, 0.6] (indica alto riesgo)\n\nUna capa densa traduce esto a: Probabilidad_inundaciÃ³n = 85%\n\nğŸ”¹ Â¿Por quÃ© es Ãºtil para inundaciones?\n\nCaptura la no linealidad de las cuencas (ej.: el suelo se satura despuÃ©s de X dÃ­as de lluvia).\n\nModela retrasos temporales (ej.: la lluvia tarda horas en afectar el rÃ­o aguas abajo).\n\nPuede integrar mÃºltiples fuentes de datos (satÃ©lites, sensores, pronÃ³sticos meteorolÃ³gicos).\n\nUsada en sistemas de alerta temprana como el EFAS (European Flood Awareness System).\n\n",
    "supporting": [
      "01-intro.osmnx_files\\figure-epub"
    ],
    "filters": [],
    "engineDependencies": {
      "jupyter": [
        {
          "jsWidgets": false,
          "jupyterWidgets": false,
          "htmlLibraries": []
        }
      ]
    }
  }
}